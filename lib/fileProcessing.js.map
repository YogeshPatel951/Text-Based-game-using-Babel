{"version":3,"sources":["../src/fileProcessing.js"],"names":["files","trescoords","treasures","_onFileSelected","processed_array","results","result","add","coordinates","set","treasure","console","log","onChange","promise","Promise","resolve","array_promises","i","length","file","push","pFileReader","all","reader","FileReader","reject","onload","evnt","target","readyState","DONE","JSON","parse","readAsText"],"mappings":";;;;;;;;uEAGO,iBAAwBA,KAAxB,EAA+BC,UAA/B,EAA2CC,SAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAE6BC,gBAAgBH,KAAhB,CAF7B;;AAAA;AAEKI,uCAFL;AAAA;AAAA;AAAA;AAAA;AAAA,oCAGqBA,eAHrB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGUC,+BAHV;AAAA;AAAA;AAAA;AAAA;;;AAKK,0CAAmBA,OAAnB,2HAA4B;AAAnBC,kCAAmB;;AACxBL,uCAAWM,GAAX,CAAeD,OAAOE,WAAtB;AACAN,sCAAUO,GAAV,CAAcH,OAAOE,WAArB,EAAkCF,OAAOI,QAAzC;AACH;AARN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWCC,gCAAQC,GAAR,CAAY,MAAZ,EAAoB,8BAApB;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Q;;;;;AAHtB;;AACA;;;;AAoBA,SAASV,eAAT,CAAyBH,KAAzB,EAAgC;;AAE5B,QAAIc,UAAUC,QAAQC,OAAR,EAAd;AACA,QAAIC,iBAAiB,EAArB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIlB,MAAMmB,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,YAAIE,OAAOpB,MAAMkB,CAAN,CAAX;AACAD,uBAAeI,IAAf,CAAoBC,YAAYF,IAAZ,CAApB;AACH;;AAGD,WAAOL,QAAQQ,GAAR,CAAYN,cAAZ,CAAP;AACH;;AAGD,SAASK,WAAT,CAAqBF,IAArB,EAA2B;AACvB,QAAII,SAAS,IAAIC,UAAJ,EAAb;AACA,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUU,MAAV,EAAqB;AACpCF,eAAOG,MAAP,GAAgB,UAAUC,IAAV,EAAgB;;AAE5B,gBAAIA,KAAKC,MAAL,CAAYC,UAAZ,IAA0BL,WAAWM,IAAzC,EAA+C;;AAE3Cf,wBAAQgB,KAAKC,KAAL,CAAWL,KAAKC,MAAL,CAAYvB,MAAvB,CAAR;AACH;AACJ,SAND;AAOA,YAAIc,IAAJ,EAAU;;AAENI,mBAAOU,UAAP,CAAkBd,IAAlB,EAAwB,OAAxB;AACH;AACJ,KAZM,CAAP;AAaH","file":"fileProcessing.js","sourcesContent":["import \"babel-core/register\";\r\nimport \"babel-polyfill\"\r\n\r\nexport async function onChange(files, trescoords, treasures) {\r\n    try {\r\n        var processed_array = await _onFileSelected(files);\r\n        for (var results of processed_array) {\r\n\r\n            for (var result of results) {\r\n                trescoords.add(result.coordinates);\r\n                treasures.set(result.coordinates, result.treasure);\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(\"file\", \"reading Error \" + e);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction _onFileSelected(files) {\r\n\r\n    var promise = Promise.resolve();\r\n    var array_promises = [];\r\n    for (var i = 0; i < files.length; i++) {\r\n        var file = files[i];\r\n        array_promises.push(pFileReader(file));\r\n    }\r\n\r\n\r\n    return Promise.all(array_promises);\r\n}\r\n\r\n\r\nfunction pFileReader(file) {\r\n    var reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n        reader.onload = function (evnt) {\r\n\r\n            if (evnt.target.readyState == FileReader.DONE) {\r\n\r\n                resolve(JSON.parse(evnt.target.result));\r\n            }\r\n        }\r\n        if (file) {\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        }\r\n    });\r\n}\r\n"]}